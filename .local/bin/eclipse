#!/usr/bin/env bash
# shellcheck disable=SC2016 # disable warning
# shellcheck disable=SC2034 # disable warning
# shellcheck disable=SC2086 # disable warning

dark_theme_name='rose-pine'
light_theme_name='rose-pine-dawn'

mode="$XDG_CONFIG_HOME/X11/themes/.mode"
prev_mode="$(cat "$mode")"

declare -A xrdb=(
	["name"]="xrdb"
	["path"]="$XDG_CONFIG_HOME/X11/themes/"
	["run_on_path"]="toggle_xrdb"
	["callback"]=""
)
declare -A altty=(
	["name"]="alacritty"
	["path"]="$XDG_CONFIG_HOME/alacritty/colors.toml"
	["run_on_path"]="toggle"
	["callback"]=""
)
declare -A nvm=(
	["name"]="nvim"
	["path"]="$XDG_CONFIG_HOME/nvim/lua/bg.lua"
	["run_on_path"]="toggle"
	["callback"]='kill -10 $(pgrep -u "$(whoami)" nvim) &> /dev/null'
)
declare -A rf=(
	["name"]="rofi"
	["path"]="$XDG_CONFIG_HOME/rofi/colors.rasi"
	["run_on_path"]="toggle"
	["callback"]=""
)
declare -A ztr=(
	["name"]="zathura"
	["path"]="$XDG_CONFIG_HOME/zathura/colorsrc"
	["run_on_path"]="toggle"
	["callback"]=""
)
declare -A dnst_dir=(
	["name"]="dunst"
	["path"]="$XDG_CONFIG_HOME/dunst/dunstrc.d/*"
	["run_on_path"]="name_swap"
	["callback"]='kill $(pgrep -u "$(whoami)" dunst); dunst &'
)
declare -A fcitx5=(
	["name"]="fcitx5"
	["path"]="$XDG_CONFIG_HOME/fcitx5/conf/classicui.conf"
	["run_on_path"]="name_toggle"
	["callback"]=""
)
declare -A gtk2=(
	["name"]="gtk-2.0"
	["path"]="$XDG_CONFIG_HOME/gtk-2.0/gtkrc-2.0"
	["run_on_path"]="name_toggle"
	["callback"]=""
)
declare -A gtk3=(
	["name"]="gtk-3.0"
	["path"]="$XDG_CONFIG_HOME/gtk-3.0/settings.ini"
	["run_on_path"]="name_toggle"
	["callback"]=""
)
declare -A gemini=(
	["name"]="gemini"
	["path"]="$HOME/.gemini/settings.json"
	["run_on_path"]="toggle_gemini"
	["callback"]=""
)

configs=(xrdb altty nvm rf ztr dnst_dir fcitx5 gtk2 gtk3 gemini)

name_swap() {
	command -v renameat2 &> /dev/null && renameat2 -e "$1" "$2" && return

	mv "$1" "$1_tmp"
	mv "$2" "$1"
	mv "$1_tmp" "$2"
}

show_help()
{
	echo "Usage: eclipse [OPTIONS]"
	echo "Options:"
	echo "  -h         Show help"
	echo "  -q         Show current theme mode(light, dark)"
	echo "  -l         Show all the files to be changed for switching themes; used for example to revert git add"
	echo "Example: eclipse -q"
}

toggle_gemini()
{
	[[ -z "$1" ]] && return 1

	if [[ $prev_mode == "dark" ]]; then
		jq '.ui.theme += " Light"' "$1" > "$1.tmp" && mv "$1.tmp" "$1"
	else
		jq '.ui.theme |= sub(" Light"; "")' "$1" > "$1.tmp" && mv "$1.tmp" "$1"
	fi
}

toggle_xrdb()
{
	if [[ $prev_mode == "dark" ]]; then
		xrdb -merge "$1/light" && echo "light" > "$1/.mode"
	else
		xrdb -merge "$1/dark" && echo "dark" > "$1/.mode"
	fi
}

name_toggle()
{
	[[ -z "$1" ]] && return 1

	if [[ $prev_mode == "dark" ]]; then
		sed -i "s/$dark_theme_name/$light_theme_name/" "$1"
	else
		sed -i "s/$light_theme_name/$dark_theme_name/" "$1"
	fi
}

toggle()
{
	[[ -z "$1" ]] && return 1

	if [[ $prev_mode == "dark" ]]; then
		sed -i 's/dark/light/' "$1"
	else
		sed -i 's/light/dark/' "$1"
	fi
}

main()
{
	while getopts ":hql" opt; do
		case $opt in
			h)
				show_help
				exit
				;;
			q)
				echo "$prev_mode"
				exit
				;;
			l)
				for config in "${configs[@]}"; do
					declare -n cfg="$config"
					echo ${cfg[path]}
				done
				exit
				;;
			\?)
				echo "Invalid option: -$OPTARG" >&2
				exit 1
				;;
		esac
	done

	shift $((OPTIND -1))

	for config in "${configs[@]}"; do
		declare -n cfg="$config"

		path="${cfg[path]}"
		run_on_path="${cfg[run_on_path]}"
		callback="${cfg[callback]}"

		$run_on_path $path # wildcard expansion thus unquoted
		eval $callback
	done

	fehbg && bspc wm -r
}

main "$@"
