# terminal

super + Return
	alacritty -e tmux
super + alt + Return
	tmux ls && alacritty -e tmux attach
alt + z
	altty-padding toggle

# program controls

super + alt + {b, k}
	{ $BROWSER \
	, fcitx5 \
	}

## playerctl

super + alt + {s, n, p}
	{ playerctl play-pause \
	, playerctl next \
	, playerctl previous \
	}

## rofi

super + space
	rofi -show run
super + Escape
	r-proc-kill
super + alt + {_,shift + } d
	r-dict {_,-h}

## screen orientation

super + ctrl + {Up,Down,Left,Right}
	{ r-set-orientation "inverted" \
	, r-set-orientation "normal" \
	, r-set-orientation "left" \
	, r-set-orientation "right" \
	}

## volume

XF86AudioRaiseVolume
	pactl set-sink-volume @DEFAULT_SINK@ +5%
XF86AudioLowerVolume
	pactl set-sink-volume @DEFAULT_SINK@ -5%
XF86AudioMute
	pactl set-sink-mute @DEFAULT_SINK@ toggle
XF86AudioMicMute
	pactl set-source-mute @DEFAULT_SOURCE@ toggle

## brightness

XF86MonBrightnessUp
	brightnessctl s +10\%
XF86MonBrightnessDown
	brightnessctl s 10\%-

## screenshot via flameshot script

Print
	flameshotter screen
super + Print
	flameshotter gui

## system

super + alt + Escape ; {k, s, super + s, u, r, super + x, c}
	{ notify-send -t 1000 "reloading sxhkd daemon"; sleep 1 && pkill -10 sxhkd \
	, notify-send -t 1000 "...zzz"; sleep 1 && systemctl suspend \
	, notify-send -t 1000 "  "; sleep 1 && systemctl poweroff \
	, notify-send -t 1000 "  "; sleep 1 && loginctl kill-session self \
	, notify-send -t 1000 "  "; sleep 1 && reboot \
	, notify-send -t 1000 "  "; sleep 1 && xrandr-reload \
	, notify-send -t 1000 "  "; sleep 1 && eclipse \
	}

super + alt + Escape ; {w, x, o, l}
	{ bspc wm -r && notify-send -t 1000 "bspwm reloaded" \
	, source $XDG_CONFIG_HOME/X11/xprofile && notify-send -t 1000 "xprofile sourced" \
	, notify-send -t 1000 "  "; sleep 1 && xset dpms force off \
	, slock \
	}

# bspwm

## close/KILL window

super + {_, alt +} w
	bspc node -{c,k}

## state/flags

### set the window state

super + {t,s,f}
	bspc node -t {tiled,\~floating,\~fullscreen}

### alternate between the tiled and monocle layout

super + z
	bspc desktop -l next

## focus/swap

### swap the current node and the biggest window

super + g
	bspc node -s biggest.window.local

### focus/move the node in the given direction

super + {_,ctrl + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

### focus/send to the given desktop

super + {_,ctrl + }{1-5}
	bspc {desktop -f,node -d} '^{1-5}'

## move window to next or previous desktop

super + ctrl + bracket{left,right}
	bspc node -d {prev,next}.local

## focus the next/previous desktop in the current monitor

super + bracket{left,right}
	bspc desktop -f {prev,next}.local.occupied

## focus the next/previous window in the current desktop

super + {n,p}
	bspc node -f {next,prev}.local.!hidden.window

## focus the last node/desktop

super + {Tab,6}
	bspc {node,desktop} -f last

## focus the older or newer node in the focus history

super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

## resize window

super + shift + {h,j,k,l}
	n=100; \
	{ d1=left;   d2=right;  dx=-$n; dy=0;   \
	, d1=bottom; d2=top;    dx=0;   dy=$n;  \
	, d1=top;    d2=bottom; dx=0;   dy=-$n; \
	, d1=right;  d2=left;   dx=$n;  dy=0;   \
	} \
	bspc node --resize $d1 $dx $dy || bspc node --resize $d2 $dx $dy

# dunst

super + BackSpace
	dunstctl close
super + alt + BackSpace
	dunstctl close-all
super + grave
	dunstctl history-pop
